"use strict";(self.webpackChunk_ibm_aiops_ui_extension_template=self.webpackChunk_ibm_aiops_ui_extension_template||[]).push([[98],{2985:function(module,__webpack_exports__,__webpack_require__){eval('/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4860);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7028);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, ".hdm--custom-layout-container{grid-template-columns:1fr 1fr !important}.monitor-boxes{background-color:#f4f4f4;display:flex;flex-direction:column;height:100%;padding:16px;width:100%}.monitor-boxes__collection{column-gap:30px;display:grid;grid-template-columns:repeat(6, 1fr);grid-template-rows:repeat(4, 350px);margin:30px;row-gap:30px}.monitor-box{border:1px solid #000;display:flex;flex-direction:column;height:100%;justify-content:space-between;padding-bottom:8px;padding-top:8px;width:100%}.monitor-box:hover{background-color:gray;border-color:blue;cursor:pointer}.monitor-box__heading{display:flex;flex-direction:row;font-weight:bold;justify-content:center}.monitor-box__summary{border-bottom:1px solid #000;border-top:1px solid #000;padding:4px 12px}.monitor-box__summary-row{display:flex;flex-direction:row;justify-content:space-between;width:100%}.monitor-box__summary-row_right{display:flex;justify-content:center;width:40px}.monitor-box__summary-icon-holder{height:16px;width:16px}.monitor-box__chart{padding-left:4px;padding-right:4px}", "",{"version":3,"sources":["webpack://./src/components/monitor-box/monitor-boxes.scss","webpack://./node_modules/@carbon/colors/index.scss"],"names":[],"mappings":"AAMA,8BACE,wCAAA,CAGF,eACE,wBC+BQ,CD9BR,YAAA,CACA,qBAAA,CACA,WAAA,CACA,YAAA,CACA,UAAA,CAEA,2BACE,eAAA,CACA,YAAA,CACA,oCAAA,CACA,mCAAA,CACA,WAAA,CACA,YAAA,CAIJ,aACE,qBAAA,CACA,YAAA,CACA,qBAAA,CACA,WAAA,CACA,6BAAA,CACA,kBAAA,CACA,eAAA,CACA,UAAA,CAEA,mBACE,qBAAA,CACA,iBAAA,CACA,cAAA,CAGF,sBACE,YAAA,CACA,kBAAA,CACA,gBAAA,CACA,sBAAA,CAGF,sBACE,4BAAA,CACA,yBAAA,CACA,gBAAA,CAEA,0BACE,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,UAAA,CAEA,gCACE,YAAA,CACA,sBAAA,CACA,UAAA,CAIJ,kCACE,WAAA,CACA,UAAA,CAIJ,oBACE,gBAAA,CACA,iBAAA","sourcesContent":["/**\\n * Â© Copyright IBM Corp. 2025\\n * SPDX-License-Identifier: Apache-2.0\\n */\\n@use \'@carbon/react/scss/colors\';\\n\\n.hdm--custom-layout-container {\\n  grid-template-columns: 1fr 1fr !important;\\n}\\n\\n.monitor-boxes {\\n  background-color: colors.$gray-10;\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  padding: 16px;\\n  width: 100%;\\n\\n  &__collection {\\n    column-gap: 30px;\\n    display: grid;\\n    grid-template-columns: repeat(6, 1fr);\\n    grid-template-rows: repeat(4, 350px);\\n    margin: 30px;\\n    row-gap: 30px;\\n  }\\n}\\n\\n.monitor-box {\\n  border: 1px solid black;\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  justify-content: space-between;\\n  padding-bottom: 8px;\\n  padding-top: 8px;\\n  width: 100%;\\n\\n  &:hover {\\n    background-color: grey;\\n    border-color: blue;\\n    cursor: pointer;\\n  }\\n\\n  &__heading {\\n    display: flex;\\n    flex-direction: row;\\n    font-weight: bold;\\n    justify-content: center;\\n  }\\n\\n  &__summary {\\n    border-bottom: 1px solid black;\\n    border-top: 1px solid black;\\n    padding: 4px 12px;\\n\\n    &-row {\\n      display: flex;\\n      flex-direction: row;\\n      justify-content: space-between;\\n      width: 100%;\\n\\n      &_right {\\n        display: flex;\\n        justify-content: center;\\n        width: 40px;\\n      }\\n    }\\n\\n    &-icon-holder {\\n      height: 16px;\\n      width: 16px;\\n    }\\n  }\\n\\n  &__chart {\\n    padding-left: 4px;\\n    padding-right: 4px;\\n  }\\n}\\n","// Code generated by @carbon/colors. DO NOT EDIT.\\n//\\n// Copyright IBM Corp. 2018, 2023\\n//\\n// This source code is licensed under the Apache-2.0 license found in the\\n// LICENSE file in the root directory of this source tree.\\n//\\n\\n$black: #000000 !default;\\n$white: #ffffff !default;\\n\\n$black-100: #000000 !default;\\n$blue-10: #edf5ff !default;\\n$blue-20: #d0e2ff !default;\\n$blue-30: #a6c8ff !default;\\n$blue-40: #78a9ff !default;\\n$blue-50: #4589ff !default;\\n$blue-60: #0f62fe !default;\\n$blue-70: #0043ce !default;\\n$blue-80: #002d9c !default;\\n$blue-90: #001d6c !default;\\n$blue-100: #001141 !default;\\n$cool-gray-10: #f2f4f8 !default;\\n$cool-gray-20: #dde1e6 !default;\\n$cool-gray-30: #c1c7cd !default;\\n$cool-gray-40: #a2a9b0 !default;\\n$cool-gray-50: #878d96 !default;\\n$cool-gray-60: #697077 !default;\\n$cool-gray-70: #4d5358 !default;\\n$cool-gray-80: #343a3f !default;\\n$cool-gray-90: #21272a !default;\\n$cool-gray-100: #121619 !default;\\n$cyan-10: #e5f6ff !default;\\n$cyan-20: #bae6ff !default;\\n$cyan-30: #82cfff !default;\\n$cyan-40: #33b1ff !default;\\n$cyan-50: #1192e8 !default;\\n$cyan-60: #0072c3 !default;\\n$cyan-70: #00539a !default;\\n$cyan-80: #003a6d !default;\\n$cyan-90: #012749 !default;\\n$cyan-100: #061727 !default;\\n$gray-10: #f4f4f4 !default;\\n$gray-20: #e0e0e0 !default;\\n$gray-30: #c6c6c6 !default;\\n$gray-40: #a8a8a8 !default;\\n$gray-50: #8d8d8d !default;\\n$gray-60: #6f6f6f !default;\\n$gray-70: #525252 !default;\\n$gray-80: #393939 !default;\\n$gray-90: #262626 !default;\\n$gray-100: #161616 !default;\\n$green-10: #defbe6 !default;\\n$green-20: #a7f0ba !default;\\n$green-30: #6fdc8c !default;\\n$green-40: #42be65 !default;\\n$green-50: #24a148 !default;\\n$green-60: #198038 !default;\\n$green-70: #0e6027 !default;\\n$green-80: #044317 !default;\\n$green-90: #022d0d !default;\\n$green-100: #071908 !default;\\n$magenta-10: #fff0f7 !default;\\n$magenta-20: #ffd6e8 !default;\\n$magenta-30: #ffafd2 !default;\\n$magenta-40: #ff7eb6 !default;\\n$magenta-50: #ee5396 !default;\\n$magenta-60: #d02670 !default;\\n$magenta-70: #9f1853 !default;\\n$magenta-80: #740937 !default;\\n$magenta-90: #510224 !default;\\n$magenta-100: #2a0a18 !default;\\n$orange-10: #fff2e8 !default;\\n$orange-20: #ffd9be !default;\\n$orange-30: #ffb784 !default;\\n$orange-40: #ff832b !default;\\n$orange-50: #eb6200 !default;\\n$orange-60: #ba4e00 !default;\\n$orange-70: #8a3800 !default;\\n$orange-80: #5e2900 !default;\\n$orange-90: #3e1a00 !default;\\n$orange-100: #231000 !default;\\n$purple-10: #f6f2ff !default;\\n$purple-20: #e8daff !default;\\n$purple-30: #d4bbff !default;\\n$purple-40: #be95ff !default;\\n$purple-50: #a56eff !default;\\n$purple-60: #8a3ffc !default;\\n$purple-70: #6929c4 !default;\\n$purple-80: #491d8b !default;\\n$purple-90: #31135e !default;\\n$purple-100: #1c0f30 !default;\\n$red-10: #fff1f1 !default;\\n$red-20: #ffd7d9 !default;\\n$red-30: #ffb3b8 !default;\\n$red-40: #ff8389 !default;\\n$red-50: #fa4d56 !default;\\n$red-60: #da1e28 !default;\\n$red-70: #a2191f !default;\\n$red-80: #750e13 !default;\\n$red-90: #520408 !default;\\n$red-100: #2d0709 !default;\\n$teal-10: #d9fbfb !default;\\n$teal-20: #9ef0f0 !default;\\n$teal-30: #3ddbd9 !default;\\n$teal-40: #08bdba !default;\\n$teal-50: #009d9a !default;\\n$teal-60: #007d79 !default;\\n$teal-70: #005d5d !default;\\n$teal-80: #004144 !default;\\n$teal-90: #022b30 !default;\\n$teal-100: #081a1c !default;\\n$warm-gray-10: #f7f3f2 !default;\\n$warm-gray-20: #e5e0df !default;\\n$warm-gray-30: #cac5c4 !default;\\n$warm-gray-40: #ada8a8 !default;\\n$warm-gray-50: #8f8b8b !default;\\n$warm-gray-60: #726e6e !default;\\n$warm-gray-70: #565151 !default;\\n$warm-gray-80: #3c3838 !default;\\n$warm-gray-90: #272525 !default;\\n$warm-gray-100: #171414 !default;\\n$white-0: #ffffff !default;\\n$yellow-10: #fcf4d6 !default;\\n$yellow-20: #fddc69 !default;\\n$yellow-30: #f1c21b !default;\\n$yellow-40: #d2a106 !default;\\n$yellow-50: #b28600 !default;\\n$yellow-60: #8e6a00 !default;\\n$yellow-70: #684e00 !default;\\n$yellow-80: #483700 !default;\\n$yellow-90: #302400 !default;\\n$yellow-100: #1c1500 !default;\\n\\n$white-hover: #e8e8e8 !default;\\n$black-hover: #212121 !default;\\n$blue-10-hover: #dbebff !default;\\n$blue-20-hover: #b8d3ff !default;\\n$blue-30-hover: #8ab6ff !default;\\n$blue-40-hover: #5c97ff !default;\\n$blue-50-hover: #1f70ff !default;\\n$blue-60-hover: #0050e6 !default;\\n$blue-70-hover: #0053ff !default;\\n$blue-80-hover: #0039c7 !default;\\n$blue-90-hover: #00258a !default;\\n$blue-100-hover: #001f75 !default;\\n$cool-gray-10-hover: #e4e9f1 !default;\\n$cool-gray-20-hover: #cdd3da !default;\\n$cool-gray-30-hover: #adb5bd !default;\\n$cool-gray-40-hover: #9199a1 !default;\\n$cool-gray-50-hover: #757b85 !default;\\n$cool-gray-60-hover: #585e64 !default;\\n$cool-gray-70-hover: #5d646a !default;\\n$cool-gray-80-hover: #434a51 !default;\\n$cool-gray-90-hover: #2b3236 !default;\\n$cool-gray-100-hover: #222a2f !default;\\n$cyan-10-hover: #cceeff !default;\\n$cyan-20-hover: #99daff !default;\\n$cyan-30-hover: #57beff !default;\\n$cyan-40-hover: #059fff !default;\\n$cyan-50-hover: #0f7ec8 !default;\\n$cyan-60-hover: #005fa3 !default;\\n$cyan-70-hover: #0066bd !default;\\n$cyan-80-hover: #00498a !default;\\n$cyan-90-hover: #013360 !default;\\n$cyan-100-hover: #0b2947 !default;\\n$gray-10-hover: #e8e8e8 !default;\\n$gray-20-hover: #d1d1d1 !default;\\n$gray-30-hover: #b5b5b5 !default;\\n$gray-40-hover: #999999 !default;\\n$gray-50-hover: #7a7a7a !default;\\n$gray-60-hover: #5e5e5e !default;\\n$gray-70-hover: #636363 !default;\\n$gray-80-hover: #474747 !default;\\n$gray-90-hover: #333333 !default;\\n$gray-100-hover: #292929 !default;\\n$green-10-hover: #b6f6c8 !default;\\n$green-20-hover: #74e792 !default;\\n$green-30-hover: #36ce5e !default;\\n$green-40-hover: #3bab5a !default;\\n$green-50-hover: #208e3f !default;\\n$green-60-hover: #166f31 !default;\\n$green-70-hover: #11742f !default;\\n$green-80-hover: #05521c !default;\\n$green-90-hover: #033b11 !default;\\n$green-100-hover: #0d300f !default;\\n$magenta-10-hover: #ffe0ef !default;\\n$magenta-20-hover: #ffbdda !default;\\n$magenta-30-hover: #ff94c3 !default;\\n$magenta-40-hover: #ff57a0 !default;\\n$magenta-50-hover: #e3176f !default;\\n$magenta-60-hover: #b0215f !default;\\n$magenta-70-hover: #bf1d63 !default;\\n$magenta-80-hover: #8e0b43 !default;\\n$magenta-90-hover: #68032e !default;\\n$magenta-100-hover: #53142f !default;\\n$orange-10-hover: #ffe2cc !default;\\n$orange-20-hover: #ffc69e !default;\\n$orange-30-hover: #ff9d57 !default;\\n$orange-40-hover: #fa6800 !default;\\n$orange-50-hover: #cc5500 !default;\\n$orange-60-hover: #9e4200 !default;\\n$orange-70-hover: #a84400 !default;\\n$orange-80-hover: #753300 !default;\\n$orange-90-hover: #522200 !default;\\n$orange-100-hover: #421e00 !default;\\n$purple-10-hover: #ede5ff !default;\\n$purple-20-hover: #dcc7ff !default;\\n$purple-30-hover: #c5a3ff !default;\\n$purple-40-hover: #ae7aff !default;\\n$purple-50-hover: #9352ff !default;\\n$purple-60-hover: #7822fb !default;\\n$purple-70-hover: #7c3dd6 !default;\\n$purple-80-hover: #5b24ad !default;\\n$purple-90-hover: #40197b !default;\\n$purple-100-hover: #341c59 !default;\\n$red-10-hover: #ffe0e0 !default;\\n$red-20-hover: #ffc2c5 !default;\\n$red-30-hover: #ff99a0 !default;\\n$red-40-hover: #ff6168 !default;\\n$red-50-hover: #ee0713 !default;\\n$red-60-hover: #b81922 !default;\\n$red-70-hover: #c21e25 !default;\\n$red-80-hover: #921118 !default;\\n$red-90-hover: #66050a !default;\\n$red-100-hover: #540d11 !default;\\n$teal-10-hover: #acf6f6 !default;\\n$teal-20-hover: #57e5e5 !default;\\n$teal-30-hover: #25cac8 !default;\\n$teal-40-hover: #07aba9 !default;\\n$teal-50-hover: #008a87 !default;\\n$teal-60-hover: #006b68 !default;\\n$teal-70-hover: #007070 !default;\\n$teal-80-hover: #005357 !default;\\n$teal-90-hover: #033940 !default;\\n$teal-100-hover: #0f3034 !default;\\n$warm-gray-10-hover: #f0e8e6 !default;\\n$warm-gray-20-hover: #d8d0cf !default;\\n$warm-gray-30-hover: #b9b3b1 !default;\\n$warm-gray-40-hover: #9c9696 !default;\\n$warm-gray-50-hover: #7f7b7b !default;\\n$warm-gray-60-hover: #605d5d !default;\\n$warm-gray-70-hover: #696363 !default;\\n$warm-gray-80-hover: #4c4848 !default;\\n$warm-gray-90-hover: #343232 !default;\\n$warm-gray-100-hover: #2c2626 !default;\\n$yellow-10-hover: #f8e6a0 !default;\\n$yellow-20-hover: #fccd27 !default;\\n$yellow-30-hover: #ddb00e !default;\\n$yellow-40-hover: #bc9005 !default;\\n$yellow-50-hover: #9e7700 !default;\\n$yellow-60-hover: #755800 !default;\\n$yellow-70-hover: #806000 !default;\\n$yellow-80-hover: #5c4600 !default;\\n$yellow-90-hover: #3d2e00 !default;\\n$yellow-100-hover: #332600 !default;\\n\\n/// Colors from the IBM Design Language\\n/// @access public\\n/// @group @carbon/colors\\n$colors: (\\n  black: (\\n    100: #000000,\\n  ),\\n  blue: (\\n    10: #edf5ff,\\n    20: #d0e2ff,\\n    30: #a6c8ff,\\n    40: #78a9ff,\\n    50: #4589ff,\\n    60: #0f62fe,\\n    70: #0043ce,\\n    80: #002d9c,\\n    90: #001d6c,\\n    100: #001141,\\n  ),\\n  cool-gray: (\\n    10: #f2f4f8,\\n    20: #dde1e6,\\n    30: #c1c7cd,\\n    40: #a2a9b0,\\n    50: #878d96,\\n    60: #697077,\\n    70: #4d5358,\\n    80: #343a3f,\\n    90: #21272a,\\n    100: #121619,\\n  ),\\n  cyan: (\\n    10: #e5f6ff,\\n    20: #bae6ff,\\n    30: #82cfff,\\n    40: #33b1ff,\\n    50: #1192e8,\\n    60: #0072c3,\\n    70: #00539a,\\n    80: #003a6d,\\n    90: #012749,\\n    100: #061727,\\n  ),\\n  gray: (\\n    10: #f4f4f4,\\n    20: #e0e0e0,\\n    30: #c6c6c6,\\n    40: #a8a8a8,\\n    50: #8d8d8d,\\n    60: #6f6f6f,\\n    70: #525252,\\n    80: #393939,\\n    90: #262626,\\n    100: #161616,\\n  ),\\n  green: (\\n    10: #defbe6,\\n    20: #a7f0ba,\\n    30: #6fdc8c,\\n    40: #42be65,\\n    50: #24a148,\\n    60: #198038,\\n    70: #0e6027,\\n    80: #044317,\\n    90: #022d0d,\\n    100: #071908,\\n  ),\\n  magenta: (\\n    10: #fff0f7,\\n    20: #ffd6e8,\\n    30: #ffafd2,\\n    40: #ff7eb6,\\n    50: #ee5396,\\n    60: #d02670,\\n    70: #9f1853,\\n    80: #740937,\\n    90: #510224,\\n    100: #2a0a18,\\n  ),\\n  orange: (\\n    10: #fff2e8,\\n    20: #ffd9be,\\n    30: #ffb784,\\n    40: #ff832b,\\n    50: #eb6200,\\n    60: #ba4e00,\\n    70: #8a3800,\\n    80: #5e2900,\\n    90: #3e1a00,\\n    100: #231000,\\n  ),\\n  purple: (\\n    10: #f6f2ff,\\n    20: #e8daff,\\n    30: #d4bbff,\\n    40: #be95ff,\\n    50: #a56eff,\\n    60: #8a3ffc,\\n    70: #6929c4,\\n    80: #491d8b,\\n    90: #31135e,\\n    100: #1c0f30,\\n  ),\\n  red: (\\n    10: #fff1f1,\\n    20: #ffd7d9,\\n    30: #ffb3b8,\\n    40: #ff8389,\\n    50: #fa4d56,\\n    60: #da1e28,\\n    70: #a2191f,\\n    80: #750e13,\\n    90: #520408,\\n    100: #2d0709,\\n  ),\\n  teal: (\\n    10: #d9fbfb,\\n    20: #9ef0f0,\\n    30: #3ddbd9,\\n    40: #08bdba,\\n    50: #009d9a,\\n    60: #007d79,\\n    70: #005d5d,\\n    80: #004144,\\n    90: #022b30,\\n    100: #081a1c,\\n  ),\\n  warm-gray: (\\n    10: #f7f3f2,\\n    20: #e5e0df,\\n    30: #cac5c4,\\n    40: #ada8a8,\\n    50: #8f8b8b,\\n    60: #726e6e,\\n    70: #565151,\\n    80: #3c3838,\\n    90: #272525,\\n    100: #171414,\\n  ),\\n  white: (\\n    0: #ffffff,\\n  ),\\n  yellow: (\\n    10: #fcf4d6,\\n    20: #fddc69,\\n    30: #f1c21b,\\n    40: #d2a106,\\n    50: #b28600,\\n    60: #8e6a00,\\n    70: #684e00,\\n    80: #483700,\\n    90: #302400,\\n    100: #1c1500,\\n  ),\\n) !default;\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ __webpack_exports__.A = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2985\n')},9834:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Default: function() { return /* binding */ Default; },\n  \"default\": function() { return /* binding */ MonitorBoxCollection_stories; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@storybook/test/dist/index.mjs\nvar dist = __webpack_require__(1645);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(4674);\n;// ./src/helpers/useQuery.ts\n/**\n * Â© Copyright IBM Corp. 2022, 2025\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n\n/**\n * The following queries are available:\n *\n *  activatePolicy ($tenantId: ID!, $policyIds: [ID!]!)\n *  archivedPoliciesSetpolicies ($tenantId: ID!, $policyIds: [ID!]!, $state: PolicyStateValue, $commentText: String)\n *  createIncidentMutation ($tenantId: ID!, $alertIds: [String]!, $description: String, $priority: Int!)\n *  getActionInstance ($tenantId: ID!, $id: ID!, $data: String!)\n *  getActions ($tenantId: ID!)\n *  getAiopsAlertConfiguration ($tenantId: ID!, $condition: String)\n *  getAiopsConversions ($tenantId: ID!)\n *  getAlertDisplayConfiguration ($tenantId: ID!)\n *  getAlertSchema ($tenantId: ID!)\n *  getAlerts ($tenantId: ID!, $columns: [String], $format: AlertFormat, $storyId: ID, $filter: String)\n *  getAnalyticConfigurations ($tenantId: ID!, $analyticType: String!)\n *  getConfiguration ($tenantId: ID!, $columns: [String!])\n *  getConversions ($tenantId: ID!)\n *  getEventData ($id: String!)\n *  getFiltersViews ($tenantId: ID!, $condition: String, $viewType: String)\n *  getGoldenSignalLogMessages ($tenantId: ID!, $appGroupId: String!, $appId: String!, $templateId: String!, $startTimestamp: String!)\n *  getGroups ($tenantId: ID!)\n *  getImpactedApplications ($tenantId: ID!, $includeCount: Boolean, $includeSeverity: Boolean, $includeStoryPriority: Boolean, $includeBusinessCriticality: Boolean, $applicationIds: String!)\n *  getIncident ($incident: ID!, $tenantId: ID!)\n *  getIncidentAlertDetails ($tenantId: ID!, $alertId: String!)\n *  getIncidentAlerts ($incidentId: ID!, $tenantId: ID!, $columns: [String])\n *  getMenu ($tenantId: ID!, $menuId: ID!)\n *  getMenuWithTools ($tenantId: ID!, $menuId: ID!, $userId: ID!, $type: String)\n *  getMenus ($tenantId: ID!, $menuType: String)\n *  getMetricForecastData ($tenantId: ID!, $resource: ID!, $group: ID!, $metric: String!)\n *  getMetricGroups ($tenantId: ID!)\n *  getMetricManagerData ($tenantId: ID!, $resource: ID!, $group: ID!, $metric: String!, $startTime: Float, $endTime: Float)\n *  getMetricManagerWithGroupAlertsData ($tenantId: ID!, $resource: ID!, $group: ID!, $metric: String!, $startTime: Float, $endTime: Float, $storyId: ID, $columns: [String]!, $format: AlertFormat!, $isAiopsPolicy: Boolean!)\n *  getMetricResources ($tenantId: ID!, $group: ID!, $metric: ID!, $filter: String)\n *  getMetrics ($tenantId: ID!, $group: ID!, $filter: String)\n *  getMimeComment ($id: ID!, $tenantId: ID!)\n *  getMimeGroup ($id: ID!, $tenantId: ID!, $eventIds: [String!]!)\n *  getPatternResourceData ($tenantId: ID!, $alertId: ID!, $detailsId: ID!)\n *  getPolicyIndexCount ($tenantId: ID!, $index: String!, $groupId: [String], $policyState: String)\n *  getPolicyMetadata ($policyId: ID!, $tenantId: ID!)\n *  getPolicyWithGroupInstances ($policyId: ID!, $tenantId: ID!, $columns: [String]!, $format: AlertFormat!, $isAiopsPolicy: Boolean!)\n *  getPolicyWithRelatedResources ($policyId: ID!, $tenantId: ID!, $correlationType: String!, $resource: [String]!)\n *  getRawAlerts ($tenantId: ID!, $filter: String!)\n *  getRelatedStories ($tenantId: ID!, $alertIds: [ID!], $storyId: ID, $filter: String)\n *  getRunbook ($runbookId: ID!, $tenantId: ID!)\n *  getRunbooksAndPolicy ($tenantId: ID!, $runbookIds: [ID!]!, $context: String, $policyId: ID!, $policyIds: String, $includePolicy: Boolean!, $includePolicies: Boolean!, $includeRunbooks: Boolean!)\n *  getSeasonalityPolicyMetadata ($policyId: ID!, $tenantId: ID!, $isAiopsPolicy: Boolean!)\n *  getSimilarIncidents ($tenantId: ID!, $storyId: ID!, $applicationId: String!, $applicationGroupId: String!, $searchText: String!)\n *  getStories ($tenantId: ID!, $filter: String)\n *  getStoriesByAlerts ($tenantId: ID!, $filter: String)\n *  getStoryAlertsGroups ($tenantId: ID!, $columns: [String], $format: AlertFormat, $storyId: ID!, $includeGroups: Boolean!)\n *  getStoryAlertsInsights ($tenantId: ID!, $storyId: ID!)\n *  getTool ($tenantId: ID!, $storyId: ID!)\n *  getTools ($tenantId: ID!, $type: String)\n *  getTopologyResource ($tenantId: ID!, $resourceId: String)\n *  getUser ($tenantId: ID!, $userId: ID!)\n *  getUserAndGroups ($tenantId: ID!, $userId: ID!)\n *  getUserPreference ($tenantId: ID!, $id: ID!)\n *  getUserPreferences ($tenantId: ID!)\n *  getUsersAndGroups ($tenantId: ID!)\n *  getUsersByGroupId ($tenantId: ID!, $groupId: ID!)\n *  rejectPolicy ($tenantId: ID!, $policyIds: [ID!]!, $commentText: String)\n *  renamePolicy ($tenantId: ID!, $policyId: ID!, $name: String!)\n *  restorePolicy ($tenantId: ID!, $policyIds: [ID!]!, $commentText: String)\n *  setPolicyDeployed ($tenantId: ID!, $policyId: ID!, $deployed: Boolean!)\n *  setPolicyLock ($tenantId: ID!, $policyIds: [ID!]!, $state: PolicyStateValue, $locked: Boolean)\n *  setPolicyStatus ($tenantId: ID!, $policyIds: [ID!]!)\n *  setSuggestedPolicies ($tenantId: ID!, $policyIds: [ID!]!, $state: PolicyStateValue, $commentText: String)\n *  updateIncidentMutation ($tenantId: ID!, $alertIds: [String]!, $correlationKey: String)\n */\n\n/**\n *\n * @param query String identifier of the query function\n * @param options Object of query specific parameters\n * @returns Object of query properties\n */\n\nfunction useQuery(query, options) {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState();\n  const refetch = refetchOptions => {\n    setLoading(true);\n    window.akoraConfig.baseState.API.contentAnalyticsAPI[query]({\n      ...options,\n      ...refetchOptions\n    }).then(setData).catch(setError).finally(() => setLoading(false));\n  };\n  useEffect(() => {\n    if (query) refetch();\n  }, [query, options]);\n  return {\n    data,\n    error,\n    loading,\n    refetch\n  };\n}\n;// ./src/helpers/useQuery.mock.ts\n\n\nconst useQuery_mock_useQuery = (0,dist.fn)(input => {}).mockName('useQuery');\n// EXTERNAL MODULE: ./node_modules/react-dom/client.js\nvar client = __webpack_require__(5148);\n// EXTERNAL MODULE: ./node_modules/@carbon/react/es/index.js + 52 modules\nvar es = __webpack_require__(6732);\n// EXTERNAL MODULE: ./node_modules/@ibm/akora-renderer-react/dist/akora-renderer-react.umd.js\nvar akora_renderer_react_umd = __webpack_require__(1515);\nvar akora_renderer_react_umd_default = /*#__PURE__*/__webpack_require__.n(akora_renderer_react_umd);\n// EXTERNAL MODULE: ./node_modules/@carbon/charts-react/dist/styles.css\nvar styles = __webpack_require__(8760);\n// EXTERNAL MODULE: ./node_modules/@carbon/charts-react/dist/index.mjs\nvar charts_react_dist = __webpack_require__(8645);\n;// ./src/components/monitor-box/MonitorBox.tsx\n/**\n * Â© Copyright IBM Corp. 2025\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n\n\n\n\n\n// @ts-ignore\n\nconst ReactRenderer = akora_renderer_react_umd_default()(react, client);\nconst {\n  useAkoraState\n} = ReactRenderer.components;\nconst className = 'monitor-box';\nconst defaultOptions = {\n  axes: {\n    left: {\n      mapsTo: 'value'\n    },\n    bottom: {\n      mapsTo: 'group',\n      scaleType: charts_react_dist/* ScaleTypes */.Wh.LABELS,\n      ticks: {\n        values: []\n      }\n    }\n  },\n  getFillColor: group => sevColors[group],\n  grid: {\n    x: {\n      enabled: false\n    },\n    y: {\n      enabled: false\n    }\n  },\n  height: '200px',\n  legend: {\n    enabled: false\n  },\n  toolbar: {\n    enabled: false\n  }\n};\nconst initialData = [{\n  group: '1',\n  value: 0\n}, {\n  group: '2',\n  value: 0\n}, {\n  group: '3',\n  value: 0\n}, {\n  group: '4',\n  value: 0\n}, {\n  group: '5',\n  value: 0\n}, {\n  group: '6',\n  value: 0\n}];\nconst sevColors = {\n  1: '#B23AEE',\n  2: '#3f71b2',\n  3: '#408BFC',\n  4: '#FDD13A',\n  5: '#FC7B1E',\n  6: '#DA1E28'\n};\nfunction getHighest(summaryData) {\n  if (summaryData.length === 0) {\n    return null;\n  }\n  let highestSeverity;\n  summaryData.forEach(summary => {\n    if (summary.count > 0 && (!highestSeverity || summary.severity > highestSeverity)) {\n      highestSeverity = summary.severity;\n    }\n  });\n  return highestSeverity;\n}\nfunction getLowest(summaryData) {\n  if (summaryData.length === 0) {\n    return null;\n  }\n  let lowestSeverity;\n  summaryData.forEach(summary => {\n    if (summary.count > 0 && (!lowestSeverity || summary.severity < lowestSeverity)) {\n      lowestSeverity = summary.severity;\n    }\n  });\n  return lowestSeverity;\n}\nfunction MonitorBox(props) {\n  const {\n    title,\n    filterClause,\n    onBoxClick,\n    shouldRefetch\n  } = props;\n  const monitorBoxId = `monitor-box_${title}`;\n  const [monitorBoxData, setMonitorBoxData] = (0,react.useState)();\n  const [monitorBoxOptions, setMonitorBoxOptions] = (0,react.useState)(defaultOptions);\n  const queryName = (0,react.useMemo)(() => 'getAlertSummary', []);\n  const queryOptions = (0,react.useMemo)(() => ({\n    tenantId: 'cfd95b7e-3bc7-4006-a4a8-a73a79c71255',\n    filter: filterClause,\n    groupBy: ['severity']\n  }), [filterClause]);\n  const {\n    state: akoraState\n  } = useAkoraState();\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useQuery_mock_useQuery(queryName, queryOptions);\n\n  // Process data for summaries here\n  const summaries = (0,react.useMemo)(() => {\n    if (!data) {\n      return null;\n    }\n    return {\n      total: {\n        title: 'Total',\n        value: data && 'alertSummary' in data.tenant ? data.tenant.alertSummary.summary.reduce((acc, cur) => acc + cur.count, 0) : null\n      },\n      highest: {\n        title: 'Highest',\n        value: data && 'alertSummary' in data.tenant ? getHighest(data.tenant.alertSummary.summary) : null\n      },\n      lowest: {\n        title: 'Lowest',\n        value: data && 'alertSummary' in data.tenant ? getLowest(data.tenant.alertSummary.summary) : null\n      }\n    };\n  }, [data]);\n  (0,react.useEffect)(() => {\n    if (shouldRefetch) {\n      refetch();\n    }\n  }, [shouldRefetch]);\n  (0,react.useEffect)(() => {\n    setMonitorBoxOptions({\n      ...monitorBoxOptions,\n      data: {\n        loading\n      }\n    });\n  }, [loading]);\n  (0,react.useEffect)(() => {\n    let newData = [];\n    initialData.forEach(initialDataPoint => {\n      const summary = data && 'alertSummary' in data.tenant ? data?.tenant.alertSummary.summary.find(summaryDataPoint => summaryDataPoint.severity.toString() === initialDataPoint.group) : null;\n      if (summary) {\n        newData.push({\n          group: summary.severity.toString(),\n          value: summary.count\n        });\n      } else {\n        newData.push(initialDataPoint);\n      }\n    });\n    setMonitorBoxData(newData);\n  }, [data]);\n  const getSummaryRow = (title, value) => {\n    return /*#__PURE__*/react.createElement(\"div\", {\n      className: `${className}__summary-row`\n    }, /*#__PURE__*/react.createElement(\"div\", {\n      className: `${className}__summary-row_left`\n    }, title), /*#__PURE__*/react.createElement(\"div\", {\n      className: `${className}__summary-row_right`\n    }, value));\n  };\n  const getSummaryRows = () => {\n    const HighestSevIcon = akoraState.utils.getSeverityIcon(summaries.highest.value);\n    const LowestSevIcon = akoraState.utils.getSeverityIcon(summaries.lowest.value);\n    return /*#__PURE__*/react.createElement(react.Fragment, null, getSummaryRow(summaries.total.title, /*#__PURE__*/react.createElement(\"div\", null, summaries.total.value)), getSummaryRow(summaries.highest.title, /*#__PURE__*/react.createElement(\"div\", {\n      className: `${className}__summary-icon-holder`\n    }, /*#__PURE__*/react.createElement(HighestSevIcon, null))), getSummaryRow(summaries.lowest.title, /*#__PURE__*/react.createElement(\"div\", {\n      className: `${className}__summary-icon-holder`\n    }, /*#__PURE__*/react.createElement(LowestSevIcon, null))));\n  };\n  return /*#__PURE__*/react.createElement(\"div\", {\n    id: monitorBoxId,\n    className: className,\n    role: \"contentinfo\",\n    onClick: () => onBoxClick()\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: `${className}__heading`\n  }, title), error ? /*#__PURE__*/react.createElement(\"div\", {\n    className: `${className}__error`\n  }, \"Error loading data for this monitor box.\") : /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"div\", {\n    className: `${className}__summary`\n  }, summaries && getSummaryRows()), /*#__PURE__*/react.createElement(\"div\", {\n    className: `${className}__chart`\n  }, monitorBoxData && /*#__PURE__*/react.createElement(charts_react_dist/* SimpleBarChart */.kf, {\n    data: monitorBoxData,\n    options: monitorBoxOptions\n  }))));\n}\n;// ./src/components/monitor-box/utils/filterUtils.ts\n/**\n * Â© Copyright IBM Corp. 2025\n * SPDX-License-Identifier: Apache-2.0\n */\nconst INSIGHT_TYPE = {\n  causal: 'aiops.ibm.com/insight-type/relationship/causal',\n  seasonal: 'aiops.ibm.com/insight-type/seasonal-occurrence',\n  runbook: 'aiops.ibm.com/insight-type/runbook',\n  probableCause: 'aiops.ibm.com/insight-type/probable-cause',\n  topology: 'aiops.ibm.com/insight-type/topology/resource',\n  chatops: 'aiops.ibm.com/insight-type/chatops/metadata',\n  itsm: 'aiops.ibm.com/insight-type/itsm/metadata',\n  similarIncident: 'aiops.ibm.com/insight-type/similar-incidents',\n  proposedBy: 'aiops.ibm.com/insight-type/proposed-by',\n  ladResolutions: 'aiops.ibm.com/insight-type/lad/resolutions',\n  ladTemplates: 'aiops.ibm.com/insight-type/lad/templates',\n  businessCriticality: 'aiops.ibm.com/insight-type/business/criticality',\n  anomaly: 'aiops.ibm.com/insight-type/anomaly',\n  causalUnion: 'aiops.ibm.com/insight-type/relationship/causal-union',\n  suppression: 'aiops.ibm.com/insight-type/suppression',\n  feedback: 'aiops.ibm.com/insight-type/feedback',\n  goldenSignal: 'aiops.ibm.com/insight-type/golden-signal',\n  titleByExample: 'aiops.ibm.com/insight-type/title-by-example',\n  incidentControl: 'aiops.ibm.com/insight-type/incidentcontrol',\n  impactedApplication: 'aiops.ibm.com/insight-type/topology/group',\n  storyTopology: 'aiops.ibm.com/insight-type/topology/story',\n  topologyStatus: 'aiops.ibm.com/insight-type/topology/statusId',\n  verboseDescription: 'aiops.ibm.com/insight-type/verbose-description',\n  deduplicationDetails: 'aiops.ibm.com/insight-type/deduplication-details',\n  actionHistory: 'aiops.ibm.com/insight-type/action/history',\n  thirdPartyEventCorrelation: 'aiops.ibm.com/insight-type/relationship/third-party-event-correlation'\n};\nconst INSIGHT_SOURCE = {\n  temporal: 'aiops.ibm.com/insight-source/relationship/causal/temporal',\n  temporalPattern: 'aiops.ibm.com/insight-source/relationship/causal/temporal-pattern',\n  scopeGroup: 'aiops.ibm.com/insight-source/relationship/causal/custom',\n  subTopologyGroup: 'aiops.ibm.com/insight-source/relationship/causal/topological-group'\n};\nconst INSIGHT_PATH = {\n  temporal: `@insights.type='${INSIGHT_TYPE.causal}' and insights.source='${INSIGHT_SOURCE.temporal}'`,\n  temporalPattern: `@insights.type='${INSIGHT_TYPE.causal}' and insights.source='${INSIGHT_SOURCE.temporalPattern}'`,\n  seasonal: `@insights.type='${INSIGHT_TYPE.seasonal}'`,\n  runbook: `@insights.type='${INSIGHT_TYPE.runbook}'`,\n  topology: `@insights.type='${INSIGHT_TYPE.topology}'`,\n  probableCause: `@insights.type='${INSIGHT_TYPE.probableCause}'`,\n  scopeGroup: `@insights.type='${INSIGHT_TYPE.causal}' and insights.source='${INSIGHT_SOURCE.scopeGroup}'`,\n  subTopologyGroup: `@insights.type='${INSIGHT_TYPE.causal}' and insights.source='${INSIGHT_SOURCE.subTopologyGroup}'`,\n  chatops: `@insights.type='${INSIGHT_TYPE.chatops}'`,\n  itsm: `@insights.type='${INSIGHT_TYPE.itsm}'`,\n  similarIncident: `@insights.type='${INSIGHT_TYPE.similarIncident}'`,\n  proposedBy: `@insights.type='${INSIGHT_TYPE.proposedBy}'`,\n  ladResolutions: `@insights.type='${INSIGHT_TYPE.ladResolutions}'`,\n  ladTemplates: `@insights.type='${INSIGHT_TYPE.ladTemplates}'`,\n  businessCriticality: `@insights.type='${INSIGHT_TYPE.businessCriticality}'`,\n  anomaly: `@insights.type='${INSIGHT_TYPE.anomaly}'`,\n  causalUnion: `@insights.type='${INSIGHT_TYPE.causalUnion}'`,\n  feedback: `@insights.type='${INSIGHT_TYPE.feedback}'`,\n  suppression: `@insights.type='${INSIGHT_TYPE.suppression}'`,\n  goldenSignal: `@insights.type='${INSIGHT_TYPE.goldenSignal}'`,\n  logTemplate: `@insights.type='${INSIGHT_TYPE.logTemplate}'`,\n  incidentControl: `@insights.type='${INSIGHT_TYPE.incidentControl}'`,\n  impactedApplication: `@insights.type='${INSIGHT_TYPE.impactedApplication}'`,\n  storyTopology: `@insights.type='${INSIGHT_TYPE.storyTopology}'`,\n  titleByExample: `@insights.type='${INSIGHT_TYPE.titleByExample}'`\n};\nconst API_FIELD_MAP = {};\nObject.keys(INSIGHT_PATH).forEach(key => {\n  // use insights.type for enrichment insights and insights.source for grouping insights\n  API_FIELD_MAP[`\\`${INSIGHT_PATH[key]}\\``] = INSIGHT_PATH[key].indexOf('insight-source') !== -1 ? 'insights.source' : 'insights.type';\n});\nconst MEMDB_TO_API_OPERATOR_MAP = {\n  contains: 'like',\n  '!contains': 'not like',\n  startsWith: 'like',\n  endsWith: 'like',\n  isEmpty: '=',\n  '!isEmpty': '!='\n};\nconst extractedFields = new Set();\nconst extractFieldsFromFilterConditions = function () {\n  let conditions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  conditions && conditions.forEach(c => {\n    if (c.type === 'conditionSet') {\n      return extractFieldsFromFilterConditions(c.conditions);\n    }\n    if (Array.isArray(c.value) && typeof c.value[0] === 'object') {\n      // if value contains conditions then extract fields from them\n      return extractFieldsFromFilterConditions(c.value);\n    }\n    if (c.field) {\n      extractedFields.add(c.field.replace(/`/g, ''));\n    }\n  });\n  return Array.from(extractedFields);\n};\nfunction conditionSetToAPIQuery(conditionSet) {\n  return processConditionSet(conditionSet.conditions, conditionSet.operator, '', true);\n}\nfunction processConditionSet(conditions, operator) {\n  let fieldPrefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  let isForAPI = arguments.length > 3 ? arguments[3] : undefined;\n  return conditions?.map(c => {\n    if (c.inactive) {\n      return null;\n    }\n    if (c.type !== 'conditionSet') {\n      if (Array.isArray(c.value)) {\n        if (typeof c.value[0] === 'object') {\n          const a = c.value.map(v => {\n            if (v.additionalfields) {\n              const fieldCondition = `${getField(v.field, v.apiField)} ${getOperator(v.operator)} ${getValue(v.value, c)}`;\n              const additionalFieldsCondition = v.additionalfields.map(f => `${getField(f, null)} ${getOperator(v.operator)} ${getValue(v.value, v)}`);\n              return `(${[fieldCondition, additionalFieldsCondition].join(`${v.operator === '=' ? ' and ' : ' or '}`)})`;\n            }\n            return `${getField(v.field, v.apiField)} ${getOperator(v.operator)} ${getValue(v.value, c)}`;\n          });\n          return a.length === 0 ? '' : `(${a.join(' or ')})`;\n        }\n        if (c.value.length === 0) {\n          if (!isForAPI) {\n            return `${getField(c.field, c.addFieldPrefix === false ? '' : fieldPrefix)} ${getOperator(c.operator)}`;\n          }\n          return `${getField(c.field, c.apiField)} ${getOperator(c.operator)} ''`;\n        }\n        const a = c.value.map(v => `${getField(c.field, c.apiField)} ${getOperator(c.operator)} ${getValue(v, c)}`);\n        return a.length === 0 ? '' : `(${a.join(' or ')})`;\n      }\n      return `${getField(c.field, c.apiField)} ${getOperator(c.operator)} ${getValue(c.value, c)}`;\n    }\n    const proccessedConditionSet = processConditionSet(c.conditions, c.operator, fieldPrefix, isForAPI);\n    if (proccessedConditionSet) return `(${proccessedConditionSet})`;\n    return '';\n  }).filter(Boolean).join(` ${operator} `);\n}\nfunction getField(field, apiField) {\n  return apiField || API_FIELD_MAP[field] || field;\n}\nfunction getOperator(operator) {\n  return MEMDB_TO_API_OPERATOR_MAP[operator] || operator;\n}\nfunction isBujiExpression(value) {\n  const regex = /^{{.+}}$/;\n  return regex.test(value);\n}\nfunction getValue(value, condition) {\n  if (isBujiExpression(value)) {\n    let val = window.akoraConfig.baseState.utils.bujiCompile(value)();\n    if (val.startsWith('\"') && val.endsWith('\"')) {\n      val = `'${val.substring(1, val.length - 1)}'`;\n    }\n    return val;\n  }\n  if (condition.operator === 'startsWith') {\n    return `'^${value}'`;\n  }\n  if (condition.operator === 'endsWith') {\n    return `'${value}$'`;\n  }\n  if (condition.operator === 'isEmpty' || condition.operator === '!isEmpty') {\n    return '';\n  }\n  if (typeof value === 'string' && condition.format === 'date-time') {\n    return `'${new Date(parseInt(value, 10))?.toISOString()}'`;\n  }\n  if (typeof value === 'string') {\n    return `'${value}'`;\n  }\n  if (typeof value === 'boolean') {\n    return !value ? 0 : 1;\n  }\n  return value;\n}\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(5072);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(7825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(7659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(5056);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(1113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/components/monitor-box/monitor-boxes.scss\nvar monitor_boxes = __webpack_require__(2985);\n;// ./src/components/monitor-box/monitor-boxes.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, \"head\");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(monitor_boxes/* default */.A, options);\n\n\n\n\n       /* harmony default export */ var monitor_box_monitor_boxes = (monitor_boxes/* default */.A && monitor_boxes/* default */.A.locals ? monitor_boxes/* default */.A.locals : undefined);\n\n;// ./src/components/monitor-box/MonitorBoxCollection.tsx\n/**\n * Â© Copyright IBM Corp. 2025\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n\n\n// @ts-ignore\n\n\n\n\n\n\nconst MonitorBoxCollection_ReactRenderer = akora_renderer_react_umd_default()(react, client);\nconst {\n  useAkoraState: MonitorBoxCollection_useAkoraState,\n  setUrlParameters\n} = MonitorBoxCollection_ReactRenderer.components;\nconst MonitorBoxCollection_className = 'monitor-boxes';\nconst alertsPath = '/aiops/:tenantid/resolution-hub/alerts';\nfunction MonitorBoxCollection() {\n  const {\n    app\n  } = MonitorBoxCollection_useAkoraState();\n  const targetUrl = app.resolvePathExpression(alertsPath);\n  const [selectedFilters, setSelectedFilters] = (0,react.useState)([]);\n  const [parsedFilters, setParsedFilters] = (0,react.useState)([]);\n  const [shouldRefetch, setShouldRefetch] = (0,react.useState)(false);\n  const queryName = (0,react.useMemo)(() => 'getFilters', []);\n  const queryOptions = (0,react.useMemo)(() => ({\n    tenantId: 'cfd95b7e-3bc7-4006-a4a8-a73a79c71255'\n  }), []);\n  const {\n    data: alertFiltersData,\n    loading: alertFiltersLoading,\n    error: alertFiltersError,\n    refetch: alertFiltersRefetch\n  } = useQuery_mock_useQuery(queryName, queryOptions);\n  (0,react.useEffect)(() => {\n    if (alertFiltersData) {\n      if ('filters' in alertFiltersData?.tenant) {\n        const filters = alertFiltersData.tenant.filters.map(filter => ({\n          filterName: filter.name,\n          filterClause: conditionSetToAPIQuery(filter.conditionSet)\n        }));\n        setParsedFilters(filters);\n      }\n    }\n  }, [alertFiltersData]);\n  (0,react.useEffect)(() => {\n    const interval = setInterval(() => {\n      setShouldRefetch(true);\n      setShouldRefetch(false);\n    }, 60000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  const onBoxClick = filterName => {\n    const newRoute = setUrlParameters(targetUrl, {\n      filtername: filterName\n    });\n    window.open(newRoute);\n  };\n  const onFilterSelect = data => {\n    setSelectedFilters(data);\n  };\n  const getBody = () => {\n    if (alertFiltersLoading) {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: MonitorBoxCollection_className + '__loading'\n      }, /*#__PURE__*/react.createElement(es/* Loading */.Rhj, null));\n    } else if (alertFiltersError) {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: MonitorBoxCollection_className + '__error'\n      }, /*#__PURE__*/react.createElement(es/* ActionableNotification */.kZS, {\n        inline: true,\n        kind: \"error\",\n        title: \"Error loading filters\",\n        actionButtonLabel: \"Retry\",\n        onActionButtonClick: () => alertFiltersRefetch()\n      }));\n    }\n    return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(\"div\", {\n      className: MonitorBoxCollection_className + '__dropdown'\n    }, /*#__PURE__*/react.createElement(es/* MultiSelect */.KFt, {\n      id: \"Filters_multiselect\",\n      label: \"Select your filters\",\n      titleText: \"Filter selection\",\n      items: parsedFilters,\n      itemToElement: item => /*#__PURE__*/react.createElement(\"span\", null, item.filterName),\n      onChange: data => onFilterSelect(data.selectedItems),\n      selectedItems: selectedFilters\n    })), /*#__PURE__*/react.createElement(\"div\", {\n      className: MonitorBoxCollection_className + '__collection'\n    }, selectedFilters?.map((filter, index) => /*#__PURE__*/react.createElement(MonitorBox, {\n      key: `monitor-box_${index}`,\n      title: filter.filterName,\n      filterClause: filter.filterClause,\n      onBoxClick: () => onBoxClick(filter.filterName),\n      shouldRefetch: shouldRefetch\n    }))));\n  };\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: MonitorBoxCollection_className,\n    role: \"contentinfo\"\n  }, getBody());\n}\n;// ./src/components/monitor-box/MonitorBoxCollection.stories.tsx\n/**\n * Â© Copyright IBM Corp. 2025\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n\nconst meta = {\n  component: MonitorBoxCollection\n};\n/* harmony default export */ var MonitorBoxCollection_stories = (meta);\nconst mockAlertFilterResponse = {\n  data: {\n    tenant: {\n      filters: [\n      // Some filter fields omitted\n      {\n        id: '17168f01-9fc4-477c-a2c3-bedf59f58317',\n        name: 'All alerts',\n        description: 'Example filter showing all alerts',\n        type: 'alert',\n        subType: null,\n        mode: 'basic',\n        tags: [],\n        conditionSet: {\n          operator: 'and',\n          conditions: []\n        },\n        whereClause: ''\n      }]\n    }\n  },\n  loading: false,\n  error: null,\n  refetch: () => {}\n};\nconst mockAlertSummaryResponse = {\n  data: {\n    tenant: {\n      alertSummary: {\n        tenantId: 'cfd95b7e-3bc7-4006-a4a8-a73a79c71255',\n        groupby: ['severity'],\n        summary: [{\n          severity: 2,\n          count: 1\n        }, {\n          severity: 1,\n          count: 1\n        }, {\n          severity: 4,\n          count: 4\n        }, {\n          severity: 6,\n          count: 1\n        }, {\n          severity: 5,\n          count: 1\n        }, {\n          severity: 3,\n          count: 3\n        }]\n      }\n    }\n  },\n  loading: false,\n  error: null,\n  refetch: () => {}\n};\nconst Default = {\n  async beforeEach() {\n    useQuery_mock_useQuery.mockImplementation(input => {\n      switch (input) {\n        case 'getFilters':\n          return mockAlertFilterResponse;\n        case 'getAlertSummary':\n          return mockAlertSummaryResponse;\n        default:\n          console.log('Invalid query name');\n          return null;\n      }\n    });\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  docs: {\n    ...Default.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  async beforeEach() {\\n    useQuery.mockImplementation(input => {\\n      switch (input) {\\n        case 'getFilters':\\n          return mockAlertFilterResponse;\\n        case 'getAlertSummary':\\n          return mockAlertSummaryResponse;\\n        default:\\n          console.log('Invalid query name');\\n          return null;\\n      }\\n    });\\n  }\\n}\",\n      ...Default.parameters?.docs?.source\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9834\n")}}]);